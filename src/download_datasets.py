# üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kaggle –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞ PlantVillage
# üì¶ Connect to Kaggle and download PlantVillage dataset

# RU: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Kaggle API –∏ —Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫–∏
# EN: Install Kaggle API and create folders

import os

# RU: –ü–∞–ø–∫–∞ –¥–ª—è –¥–∞—Ç–∞—Å–µ—Ç–∞
# EN: Dataset folder
DATA_DIR = "../content/plant_disease"
os.makedirs(DATA_DIR, exist_ok=True)

# ‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å kaggle.json –≤ Colab
# RU: –§–∞–π–ª kaggle.json –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ Kaggle -> Account -> API -> Create New Token
# EN: Get kaggle.json from your Kaggle account (Profile -> Account -> API -> Create New Token)

import os
import subprocess

# DATA_DIR = "plant_disease"
# os.makedirs(DATA_DIR, exist_ok=True)

# 1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É ~/.kaggle
os.makedirs(os.path.expanduser("~/.kaggle"), exist_ok=True)

# 2Ô∏è‚É£ –ö–æ–ø–∏—Ä—É–µ–º kaggle.json (–∑–∞–º–µ–Ω–∏ –ø—É—Ç—å –Ω–∞ —Å–≤–æ–π)
source_kaggle_json = r"kaggle.json"  # –ø—É—Ç—å –∫ kaggle.json –Ω–∞ —Ç–≤–æ—ë–º –ü–ö
dest_kaggle_json = os.path.expanduser("~\\.kaggle\\kaggle.json")
os.replace(source_kaggle_json, dest_kaggle_json)

# 3Ô∏è‚É£ –î–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª (Linux/MacOS; –Ω–∞ Windows –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)
try:
    os.chmod(dest_kaggle_json, 0o600)
except PermissionError:
    print("‚ö†Ô∏è chmod –ø—Ä–æ–ø—É—â–µ–Ω ‚Äî Windows –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")

# 4Ô∏è‚É£ –°–∫–∞—á–∏–≤–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç —á–µ—Ä–µ–∑ Kaggle CLI
subprocess.run(
    ["kaggle", "datasets", "download", "-d", "emmarex/plantdisease", "-p", DATA_DIR],
    check=True
)

# 5Ô∏è‚É£ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
import zipfile
zip_path = os.path.join(DATA_DIR, "plantdisease.zip")
with zipfile.ZipFile(zip_path, "r") as zip_ref:
    zip_ref.extractall(DATA_DIR)

print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —Å–∫–∞—á–∞–Ω –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω")


# ------------------------
# üìÇ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞ Tomato –∏ Apple
# ------------------------
import shutil
from pathlib import Path

# RU: –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
# EN: Folder with images
RAW_DIR = Path(DATA_DIR) / "PlantVillage"

# RU: –ù–æ–≤–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# EN: New folder for filtered dataset
FILTERED_DIR = Path(DATA_DIR) / "Filtered"
os.makedirs(FILTERED_DIR, exist_ok=True)

# RU: –ö–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–≤–ª—è–µ–º
# EN: Classes we want to keep
KEEP_CLASSES = [c for c in os.listdir(RAW_DIR) if c.startswith("Tomato")]

# RU: –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏
# EN: Copy only the required classes
for cls in KEEP_CLASSES:
    src = RAW_DIR / cls
    dst = FILTERED_DIR / cls
    shutil.copytree(src, dst, dirs_exist_ok=True)

print(f"‚úÖ –û—Å—Ç–∞–≤–ª–µ–Ω–æ –∫–ª–∞—Å—Å–æ–≤ / Classes kept: {KEEP_CLASSES}")